package com.onenorth.anyi.payment.alipay;

import android.app.Activity;
import android.content.ServiceConnection;
import android.content.ComponentName;
import android.os.IBinder;
import android.os.Handler;
import android.os.Bundle;
import android.os.RemoteException;
import com.alipay.android.app.IAlixPay;
import com.alipay.android.app.IRemoteServiceCallback;

public class AlipayHelper {
	

	private static class Alipayer {
		Integer lock = 0;
		IAlixPay mAlixPay = null;
		boolean mbPaying = false;
		Activity mActivity = null;

		private ServiceConnection mAliPayConnection = new ServiceConnection() {
			public void onServiceConnected(ComponentName className, IBinder service) {
				synchronized(lock) {
					mAlixPay = IAlixPay.Stub.asInterface(service);
					lock.notify();
				}
			}

			public void onServiceDisconnected(ComponentName className) {
				mAlixPay = null;
			}
		};

		private boolean pay(final String strOrderInfo, final Handler callBack,
				final int myWhat, final Activity activity) {
			if (mbPaying) {
				return false;
			}
			mbPaying = true;

			mActivity = activity;
	
			// bind the service.
			// 绑定服务
			if (mAlixPay == null) {
			// 绑定安全支付服务需要获取上下文环境，
			// 如果绑定不成功使用mActivity.getApplicationContext().bindService
			// 解绑时同理
				mActivity.bindService(
						new Intent(IAlixPay.class.getName()), mAlixPayConnection,
						Context.BIND_AUTO_CREATE);
			}
			// else ok.
			
			// 实例一个线程来进行支付 new Thread(new Runnable() { public void run() {
			try {

			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		/**
		 * This implementation is used to receive callbacks from the remote service.
		 */
		private IRemoteServiceCallback mCallback = new IRemoteServiceCallback.Stub() {

			/**
			 * This is called by the remote service regularly to tell us about new
			 * values. Note that IPC calls are dispatched through a thread pool
			 * running in each process, so the code executing here will NOT be
			 * running in our main thread like most other things -- so, to update
			 * the UI, we need to use a Handler to hop over there. 通过IPC机制启动安全支付服务
			 **/
			public void startActivity(String packageName,  String className,
					int iCallingPid, Bundle bundle) throws RemoteException {

			}

			/**
			 * when the msp loading dialog gone, call back this method
			 */
			@Override
			public boolean isHideLoadingScreen() throws RemoteException {
				return false;
			}

			/**
			 *	when the current trade is finished or cancelled, call back this 
			 *	method.
			 */
			@Override
			public void payEnd(boolean arg0, String arg1)  throws RemoteException {

			}
		};
	}
}
